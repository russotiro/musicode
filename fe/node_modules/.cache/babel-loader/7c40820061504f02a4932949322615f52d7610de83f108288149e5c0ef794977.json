{"ast":null,"code":"/**\n * React Router Native v6.9.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { TouchableHighlight, BackHandler, Linking } from 'react-native';\nimport { MemoryRouter, useNavigate, useLocation } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, renderMatches, resolvePath, unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport URLSearchParams from '@ungap/url-search-params';\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nvar _excluded = [\"onPress\", \"relative\", \"replace\", \"state\", \"to\"];\nfunction NativeRouter(props) {\n  return React.createElement(MemoryRouter, Object.assign({}, props));\n}\nfunction Link(_ref) {\n  var onPress = _ref.onPress,\n    relative = _ref.relative,\n    _ref$replace = _ref.replace,\n    replace = _ref$replace === void 0 ? false : _ref$replace,\n    state = _ref.state,\n    to = _ref.to,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var internalOnPress = useLinkPressHandler(to, {\n    replace: replace,\n    state: state,\n    relative: relative\n  });\n  function handlePress(event) {\n    if (onPress) onPress(event);\n    if (!event.defaultPrevented) {\n      internalOnPress(event);\n    }\n  }\n  return React.createElement(TouchableHighlight, Object.assign({}, rest, {\n    onPress: handlePress\n  }));\n}\nvar HardwareBackPressEventType = \"hardwareBackPress\";\nvar URLEventType = \"url\";\nfunction useLinkPressHandler(to) {\n  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    replace = _ref2.replace,\n    state = _ref2.state,\n    relative = _ref2.relative;\n  var navigate = useNavigate();\n  return function handlePress() {\n    navigate(to, {\n      replace: replace,\n      state: state,\n      relative: relative\n    });\n  };\n}\nfunction useHardwareBackButton() {\n  React.useEffect(function () {\n    function handleHardwardBackPress() {\n      return undefined;\n    }\n    BackHandler.addEventListener(HardwareBackPressEventType, handleHardwardBackPress);\n    return function () {\n      BackHandler.removeEventListener(HardwareBackPressEventType, handleHardwardBackPress);\n    };\n  }, []);\n}\nfunction useDeepLinking() {\n  var navigate = useNavigate();\n  React.useEffect(function () {\n    var current = true;\n    Linking.getInitialURL().then(function (url) {\n      if (current) {\n        if (url) navigate(trimScheme(url));\n      }\n    });\n    return function () {\n      current = false;\n    };\n  }, [navigate]);\n  React.useEffect(function () {\n    function handleURLChange(event) {\n      navigate(trimScheme(event.url));\n    }\n    Linking.addEventListener(URLEventType, handleURLChange);\n    return function () {\n      Linking.removeEventListener(URLEventType, handleURLChange);\n    };\n  }, [navigate]);\n}\nfunction trimScheme(url) {\n  return url.replace(/^.*?:\\/\\//, \"\");\n}\nfunction useSearchParams(defaultInit) {\n  var defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  var hasSetSearchParamsRef = React.useRef(false);\n  var location = useLocation();\n  var searchParams = React.useMemo(function () {\n    var searchParams = createSearchParams(location.search);\n    if (!hasSetSearchParamsRef.current) {\n      var _loop = function _loop(key) {\n        if (!searchParams.has(key)) {\n          defaultSearchParamsRef.current.getAll(key).forEach(function (value) {\n            searchParams.append(key, value);\n          });\n        }\n      };\n      for (var key of defaultSearchParamsRef.current.keys()) {\n        _loop(key);\n      }\n    }\n    return searchParams;\n  }, [location.search]);\n  var navigate = useNavigate();\n  var setSearchParams = React.useCallback(function (nextInit, navigateOpts) {\n    var newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOpts);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction createSearchParams() {\n  var init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce(function (memo, key) {\n    var value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(function (v) {\n      return [key, v];\n    }) : [[key, value]]);\n  }, []));\n}\nexport { Link, NativeRouter, createSearchParams, useHardwareBackButton as useAndroidBackButton, useDeepLinking, useHardwareBackButton, useLinkPressHandler, useSearchParams };","map":{"version":3,"names":["NativeRouter","props","React","createElement","MemoryRouter","Object","assign","Link","_ref","onPress","relative","_ref$replace","replace","state","to","rest","_objectWithoutProperties","_excluded","internalOnPress","useLinkPressHandler","handlePress","event","defaultPrevented","TouchableHighlight","HardwareBackPressEventType","URLEventType","_ref2","arguments","length","undefined","navigate","useNavigate","useHardwareBackButton","useEffect","handleHardwardBackPress","BackHandler","addEventListener","removeEventListener","useDeepLinking","current","Linking","getInitialURL","then","url","trimScheme","handleURLChange","useSearchParams","defaultInit","defaultSearchParamsRef","useRef","createSearchParams","hasSetSearchParamsRef","location","useLocation","searchParams","useMemo","search","_loop","key","has","getAll","forEach","value","append","keys","setSearchParams","useCallback","nextInit","navigateOpts","newSearchParams","init","URLSearchParams","Array","isArray","reduce","memo","concat","map","v"],"sources":["/Users/tina/Documents/Tufts/capstone/my-app/node_modules/react-router-native/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport type {\n  GestureResponderEvent,\n  TouchableHighlightProps,\n} from \"react-native\";\nimport { BackHandler, Linking, TouchableHighlight } from \"react-native\";\nimport type {\n  To,\n  MemoryRouterProps,\n  NavigateOptions,\n  RelativeRoutingType,\n} from \"react-router\";\nimport { MemoryRouter, useLocation, useNavigate } from \"react-router\";\n\nimport URLSearchParams from \"@ungap/url-search-params\";\n\n////////////////////////////////////////////////////////////////////////////////\n// RE-EXPORTS\n////////////////////////////////////////////////////////////////////////////////\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n} from \"react-router\";\n\n////////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface NativeRouterProps extends MemoryRouterProps {}\n\n/**\n * A <Router> that runs on React Native.\n */\nexport function NativeRouter(props: NativeRouterProps) {\n  return <MemoryRouter {...props} />;\n}\n\nexport interface LinkProps extends TouchableHighlightProps {\n  children?: React.ReactNode;\n  onPress?: (event: GestureResponderEvent) => void;\n  relative?: RelativeRoutingType;\n  replace?: boolean;\n  state?: any;\n  to: To;\n}\n\n/**\n * A <TouchableHighlight> that navigates to a different URL when touched.\n */\nexport function Link({\n  onPress,\n  relative,\n  replace = false,\n  state,\n  to,\n  ...rest\n}: LinkProps) {\n  let internalOnPress = useLinkPressHandler(to, { replace, state, relative });\n  function handlePress(event: GestureResponderEvent) {\n    if (onPress) onPress(event);\n    if (!event.defaultPrevented) {\n      internalOnPress(event);\n    }\n  }\n\n  return <TouchableHighlight {...rest} onPress={handlePress} />;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// HOOKS\n////////////////////////////////////////////////////////////////////////////////\n\nconst HardwareBackPressEventType = \"hardwareBackPress\";\nconst URLEventType = \"url\";\n\n/**\n * Handles the press behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same press behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkPressHandler(\n  to: To,\n  {\n    replace,\n    state,\n    relative,\n  }: {\n    replace?: boolean;\n    state?: any;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: GestureResponderEvent) => void {\n  let navigate = useNavigate();\n  return function handlePress() {\n    navigate(to, { replace, state, relative });\n  };\n}\n\n/**\n * Enables support for the hardware back button on Android.\n */\nexport function useHardwareBackButton() {\n  React.useEffect(() => {\n    function handleHardwardBackPress() {\n      return undefined;\n      // TODO: The implementation will be something like this\n      // if (history.index === 0) {\n      //   return false; // home screen\n      // } else {\n      //   history.back();\n      //   return true;\n      // }\n    }\n\n    BackHandler.addEventListener(\n      HardwareBackPressEventType,\n      handleHardwardBackPress\n    );\n\n    return () => {\n      BackHandler.removeEventListener(\n        HardwareBackPressEventType,\n        handleHardwardBackPress\n      );\n    };\n  }, []);\n}\n\nexport { useHardwareBackButton as useAndroidBackButton };\n\n/**\n * Enables deep linking, both on the initial app launch and for\n * subsequent incoming links.\n */\nexport function useDeepLinking() {\n  let navigate = useNavigate();\n\n  // Get the initial URL\n  React.useEffect(() => {\n    let current = true;\n\n    Linking.getInitialURL().then((url) => {\n      if (current) {\n        if (url) navigate(trimScheme(url));\n      }\n    });\n\n    return () => {\n      current = false;\n    };\n  }, [navigate]);\n\n  // Listen for URL changes\n  React.useEffect(() => {\n    function handleURLChange(event: { url: string }) {\n      navigate(trimScheme(event.url));\n    }\n\n    Linking.addEventListener(URLEventType, handleURLChange);\n\n    return () => {\n      Linking.removeEventListener(URLEventType, handleURLChange);\n    };\n  }, [navigate]);\n}\n\nfunction trimScheme(url: string) {\n  return url.replace(/^.*?:\\/\\//, \"\");\n}\n\n/**\n * A convenient wrapper for accessing individual query parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(() => {\n    let searchParams = createSearchParams(location.search);\n\n    if (!hasSetSearchParamsRef.current) {\n      for (let key of defaultSearchParamsRef.current.keys()) {\n        if (!searchParams.has(key)) {\n          defaultSearchParamsRef.current.getAll(key).forEach((value) => {\n            searchParams.append(key, value);\n          });\n        }\n      }\n    }\n\n    return searchParams;\n  }, [location.search]);\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOpts) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOpts);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\ntype SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}