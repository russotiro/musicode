%import common.WORD
start: statement+
LPAREN: "("
RPAREN: ")"
LBRACKET: "["
RBRACKET: "]"
statement: LPAREN (title | subtitle | composer | tempo | instruments | part) RPAREN

title: "title" "\"" WORD+ "\""
subtitle: "subtitle" "\"" WORD+ "\""
composer: "composer" "\"" WORD+ "\""

measure: /m[1-9][0-9]*/

// clef: "clef" clef_value measure? instrument?
// clef_value: /(treble|bass)/

// time: "time" time_signature measure?
// time_signature: (/[1-9][0-9]*/ "/" duration) | /common/ | /cut/

// key: "key" key_signature measure? instrument?
// key_signature: /[A-G][#b]?[Mm]?/ //default to major in transpiler if no Mm given

tempo: "tempo" ((/\"/ WORD+ /\"/) | ("/" duration "=" /[1-9][0-9]*/) | (/\"/ WORD+ /\"/ "/" duration "=" /[1-9][0-9]*/)) measure? // TODO: simplify. and accept other order

instruments: "instruments" instrument+

// part construction
part: "part" instrument instrument_name staff+
instrument: WORD
instrument_name: "\"" WORD+ "\""
staff: LPAREN "staff" staff_environment+ RPAREN

// staff environments
staff_environment: LPAREN (notes|voices|endings) RPAREN
notes: "notes" notes_argument+
notes_argument: note_environment | staff_event | note_event
voices: "voices" voice+
voice: LPAREN "voice" (LPAREN notes RPAREN)+ RPAREN
endings: "." //TODO

// note environments
note_environment: slur | (LPAREN (tuplet | pedal | crescendo | decrescendo) RPAREN)
slur: regular_slur | phrasing_slur
regular_slur: (/\{/ notes_argument+ /\}/)
phrasing_slur: (/\\\{/ notes_argument+ /\\\}/)
tuplet: "tuplet" /[1-9][0-9]*\/[1-9][0-9]*/ notes_argument+
pedal: "pedal" notes_argument+
crescendo: /cresc(endo)?(Text)?/ notes_argument+
decrescendo: /((decresc(endo)?)|(dim(inuendo)?))(Text)?/ notes_argument+

// staff events
staff_event: LPAREN (clef | key | time | barline) RPAREN
clef: "clef" WORD // define clef database: treble, bass, alto, tenor, neutral...
key: "key" /[A-G][#b]?[Mm]?/
time: "time" ((/[1-9][0-9]*/ "/" duration) | /common/ | /cut/)
barline: "barline" WORD // define barline database: single, double, repeatBegin, repeatEnd, final...

// note events
note_event: (rest | ((note | chord) modifier_list?)) "/" duration
rest: ("r" | "R")
note: pitch octave
chord: note ("_" note)*
pitch: /[A-Ga-g][#b]?/
octave: /[0-8]/
duration: /[1248(16)(32)(64)(128)]\.{0,3}/

// modifiers
modifier_list: (LBRACKET modifier_keyword+ RBRACKET) | articulation_symbol+
modifier_keyword: articulation_keyword | /stemUp/ | /stemDown/ | /lift/ | dynamics_keyword | piano_fingering
articulation_keyword: /staccato/ | /marcato/ | /tenuto/ | /accent/ | /fermata/ | /tie/ | /gliss(ando)?/
articulation_symbol: /\./ | /\^/ | /_/ | />/ | /~/
dynamics_keyword: /p{1,3}/ | /mp/ | /mf/ | /f{1,3}/ | /s[pf]/ | /sf{1,2}z/ | /fp/
piano_fingering: /pianoFinger[1-5]/


%ignore " "
%ignore "\n"